==== VM images and configs for fast-vm ====
Publicaly available images of some popular systems in typicaly minimal configuration
with serial console.

Images can be downloaded from following locations:
Primary location (slow - only 10 Mbit/s)
  - https://www.famera.cz/large_data/fast-vm-images/
Mirror locations (fast - up to 10000 Mbit/s)
  - http://ftp.linux.cz/pub/linux/people/ondrej_famera/fastvm-images/

==== Structure of this repository ====
<distribution name>/xml/*.xml             - libvirt XML files for fast-vm
<distribution name>/hacks/*hacks.sh       - fast-vm standard hack files
<distribution name>/xml/*-uefi.xml        - UEFI libvirt XML files for fast-vm
<distribution name>/hacks/*hacks-uefi.sh  - UEFI fast-vm standard hack files
<distribution name>/hacks/*hacks-extra.sh - fast-vm special hack files
archived/<distribution name>              - versions that reached their End of life

==== Installation ====
To use the hack files included in this repository you would need command
'guestfish' to be present and working on your system. In RPM based systems
like Fedora/RHEL/Centos you can install it using command below.

  # yum install libguestfs-tools-c
  # dnf install libguestfs-tools-c

==== UEFI support ( from fast-vm-1.0 )====
For images with UEFI support you will need OVMF UEFI firmware and UEFI variables.
These should be present on the paths below:
  - /usr/share/OVMF/OVMF_CODE.fd  (UEFI firmware)
  - /usr/share/OVMF/OVMF_VARS.fd  (UEFI variables)
The UEFI variables file is used as template for creating per-machine nvram file
with variables automatically by libvirt (check /etc/libvirt/qemu.conf for more detail).

==== SELinux relabeling issues ====
In libguestfs from version 1.34 (or 1.32 in Centos/RHEL) new command 'selinux-relabel'
was introduced. Some hack files uses it for relabeling files that were changed so they
contain proper SELinux context. If the 'selinux-relabel' is not present in your libguestfs
version the recommended is to upgrade or relabel whole filesystem in VM to ensure correct
contexts of files. (Note that this will considerably slow the first VM startup !)
Some hack files contain detection of this new command and will do the needed accordingly.

==== How to use these images ====
Example of centos-6.7 image import.

1. Download image from https://ssl.famera.cz/large_data/fast-vm-images/centos-6.7.img.gz

2. Run image import with fast-vm
  # fast-vm import_image c6.7 centos-6.7.img.gz centos-6.3-7.2.xml centos-6-hacks.sh

## (optional) recommended further steps

3. Create base image VM
  # fast-vm create c6.7 base

4. Run manually base image VM and customize it to your liking
  # virsh start fastvm-c6.7
  # virsh console fastvm-c6.7
  (optional) change root password
  (optional) add your ssh key for easier SSH login
  ...

5. Shutdown base image VM


==== Provided configurations in this repository ====
== CentOS
## Login information
# user: root
# pass: testtest
- SSH enabled on boot with root login
## System details
- no graphic card
- serial console configured for system and grub
- hostname configured according to VM_NAME from fast-vm
- system installed using minimal option where available (check *.ks file for details)
- system would be running for the first time after installation
- disk drive connection:
  - CentOS 5.0 - 6.2 - IDE drive (lack of virtio SCSI support in OS)
  - CentOS 6.3 - 7.3 - SCSI drive using virtio SCSI controller (supports TRIM)
## Drive layout
- 10 GB drive
(non-UEFI version)
  - default_size /boot (1st partition)
  - LVM name (cXvg, where X is 5,6 or 7 according to CentOS major version)
    - 256MB swap_lv
    - 5000MB root_lv
    - rest is free space on VG cXvg
(UEFI version)
  - default_size /boot/efi (1st partition)
  - default_size /boot (2nd partition)
  - LVM name (cXvg, where X is 6 or 7 according to CentOS major version)
    - 256MB swap_lv
    - 5000MB root_lv
    - rest is free space on VG cXvg

== RHEL
! these images are not publicly available
## Login information
# user: root
# pass: testtest
- SSH enabled on boot with root login
## System details
! systems are not registered
- no graphic card
- serial console configured for system and grub
- hostname configured according to VM_NAME from fast-vm
- systems installed using minimal option where available (rhel5 with many disabled options, check *.ks file for details)
- system would be running for the first time after installation
- disk drive connection:
  - RHEL 5.0 - 6.2 - IDE drive (lack of virtio SCSI support in OS)
  - RHEL 6.3 - 7.3 - SCSI drive using virtio SCSI controller (supports TRIM)
## Drive layout
- 10 GB drive
(non-UEFI version)
  - default_size /boot (1st partition)
  - LVM name (rXvg, where X is 5, 6 or 7, according to RHEL major version)
    - 256MB swap_lv
    - 5000MB root_lv
    - rest is free space on VG rXvg
(UEFI version)
  - default_size /boot/efi (1st partition)
  - default_size /boot (2nd partition)
  - LVM name (rXvg, where X is 6 or 7 according to RHEL major version)
    - 256MB swap_lv
    - 5000MB root_lv
    - rest is free space on VG rXvg

== Ubuntu server
## Login information
# user: myroot
# pass: testtest
- 'myroot' can become root through sudo
## System details
- no graphic card
- serial console configured for system and grub
- hostname configured according to VM_NAME from fast-vm
- system installed using minimal option with 'OpenSSH server' group enabled
- system would be running for the first time after installation
- disk drive connection - SCSI drive using virtio SCSI controller (supports TRIM)
## Drive layout
- 10 GB drive
  - default_size /boot
  - LVM name (uXXYYvg, for. example Ubuntu 14.04 will have VG name u1404vg)
    - 256MB swap_lv
    - 5GB root_lv
    - rest is free space on VG uXXYYvg

== Fedora
## Login information
# user: root
# pass: testtest
- SSH enabled on boot with root login
## System details
- no graphic card
- serial console configured for system and grub
- hostname configured according to VM_NAME from fast-vm
- system installed using minimal option where available (check *.ks file for details)
- system would be running for the first time after installation
- disk drive connection:
  - Fedora 22+ - SCSI drive using virtio SCSI controller (supports TRIM)
## Drive layout
- 10 GB drive
  - default_size /boot
  - LVM name (fXX, where XX is Fedora release number )
    - 256MB swap_lv
    - 5000MB root_lv
    - rest is free space on VG fXX

== Debian
## Login information
# user: myroot/root
# pass: testtest
- 'myroot' can become root through sudo and is accessible over ssh
## System details
- no graphic card
- serial console configured for system and grub
- hostname configured according to VM_NAME from fast-vm
- system installed using minimal option with 'OpenSSH server' group enabled
- system would be running for the first time after installation
- disk drive connection - SCSI drive using virtio SCSI controller (supports TRIM)
- e1000 network card (virtio was having issues when system booted - this needs more investigation)
## Drive layout
- 10 GB drive
  - default_size /boot
  - LVM name (debianXvg, where X is major version, for. example Debian 8.5 will have VG name debian8vg)
    - 256MB swap_lv
    - 5GB root_lv
    - rest is free space on VG debianXvg

== Gentoo (preview)
## Login information
# user: root
# pass: testtest
## System details
- no graphic card
- serial console configured for system and grub
- hostname configured according to VM_NAME from fast-vm
- SSH server activated and root login with password permitted

==== *-hacks-extra.sh ====
- scripts with extended configuration options compatible with fast-vm 0.4+
- currently changes following behaviour:
  - custom root password
  - preloaded SSH key for root SSH access
  - change of grub timeout

==== Author ====
Onderj Famera <ondrej-xa2iel8u@famera.cz>
